<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
				   
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:alm;MODE=Oracle;DB_CLOSE_DELAY=-1" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="false" />
		<property name="generateDdl" value="true" />
		<property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="crudEM" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" />

	<!-- Scans for application @Components to deploy -->
	<context:component-scan base-package="com.ea" />
	
	<!-- Enables annotation config -->
	<context:annotation-config/>
	
	
	<!-- ===================================================================	-->
	<!--  AOP: Configuration and Aspects	-->
	<!-- ===================================================================	-->

	<!-- Enable @Transactional support -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- Enable @AspectJ support
	do not permit correct behavior of @Secure from junit 
	<aop:aspectj-autoproxy proxy-target-class="false"/>
	-->
	
	<!-- Enable @Configured support -->
	<aop:spring-configured/>
	
	
	<aop:config>
	  <aop:advisor id="managerTx" 
	  		advice-ref="txAdvice" 
	  		pointcut="execution(* *..service.*Service.*(..))" order="1"/>
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	  <tx:attributes>
	    <!-- Read-only commented out to make things easier for end-users -->
	   <!-- http://issues.appfuse.org/browse/APF-556 -->
	    <tx:method name="get* select*" read-only="true"/>
	    <tx:method name="*"/>
	  </tx:attributes>
	</tx:advice>	
	
	<bean id="aopLogging" class="com.ea.crud.aop.AopLogging" />
	
	<aop:config>
 		<aop:aspect id="aspectLoggging" ref="aopLogging" >
			<aop:pointcut id="pointCutAfter"
	 	    	expression="execution(* com.ea.crud.service.UserService.loadUserByUsername(..))" />
			<aop:after method="logAfter" pointcut-ref="pointCutAfter"/>
		</aop:aspect>
 	</aop:config>
	
	
</beans>